{"version":3,"file":"index-CWYeHXXj.js","sources":["../../node_modules/react/cjs/react-jsx-runtime.production.min.js","../../node_modules/react/jsx-runtime.js","../../node_modules/react-dom/client.js","../../src/components/providers/MockAuthProvider.tsx","../../src/components/Layout.tsx","../../node_modules/clsx/dist/clsx.mjs","../../src/components/ui/Button.tsx","../../src/pages/HomePage.tsx","../../src/components/ui/Textarea.tsx","../../src/components/ui/Input.tsx","../../src/services/mockDataService.ts","../../src/components/editor/ScenarioEditor.tsx","../../src/pages/EditorPage.tsx","../../src/pages/DashboardPage.tsx","../../src/pages/LoginPage.tsx","../../src/pages/RegisterPage.tsx","../../src/App.tsx","../../src/main.tsx"],"sourcesContent":["/**\n * @license React\n * react-jsx-runtime.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var f=require(\"react\"),k=Symbol.for(\"react.element\"),l=Symbol.for(\"react.fragment\"),m=Object.prototype.hasOwnProperty,n=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p={key:!0,ref:!0,__self:!0,__source:!0};\nfunction q(c,a,g){var b,d={},e=null,h=null;void 0!==g&&(e=\"\"+g);void 0!==a.key&&(e=\"\"+a.key);void 0!==a.ref&&(h=a.ref);for(b in a)m.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps,a)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:k,type:c,key:e,ref:h,props:d,_owner:n.current}}exports.Fragment=l;exports.jsx=q;exports.jsxs=q;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.min.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n","'use strict';\n\nvar m = require('react-dom');\nif (process.env.NODE_ENV === 'production') {\n  exports.createRoot = m.createRoot;\n  exports.hydrateRoot = m.hydrateRoot;\n} else {\n  var i = m.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n  exports.createRoot = function(c, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.createRoot(c, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n  exports.hydrateRoot = function(c, h, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.hydrateRoot(c, h, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n}\n","import React, { createContext, useContext, useState, useEffect } from 'react'\r\n\r\ninterface User {\r\n  uid: string\r\n  email: string | null\r\n  displayName: string | null\r\n  photoURL: string | null\r\n}\r\n\r\ninterface AuthContextType {\r\n  user: User | null\r\n  loading: boolean\r\n  signIn: (email: string, password: string) => Promise<void>\r\n  signUp: (email: string, password: string, displayName: string) => Promise<void>\r\n  signOut: () => Promise<void>\r\n  signInWithGoogle: () => Promise<void>\r\n}\r\n\r\nconst AuthContext = createContext<AuthContextType | undefined>(undefined)\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext)\r\n  if (context === undefined) {\r\n    throw new Error('useAuth must be used within an AuthProvider')\r\n  }\r\n  return context\r\n}\r\n\r\ninterface AuthProviderProps {\r\n  children: React.ReactNode\r\n}\r\n\r\nexport const AuthProvider: React.FC<AuthProviderProps> = ({ children }) => {\r\n  const [user, setUser] = useState<User | null>(null)\r\n  const [loading, setLoading] = useState(true)\r\n\r\n  useEffect(() => {\r\n    // Check if user is logged in from localStorage\r\n    const savedUser = localStorage.getItem('mockUser')\r\n    if (savedUser) {\r\n      setUser(JSON.parse(savedUser))\r\n    }\r\n    setLoading(false)\r\n  }, [])\r\n\r\n  const signIn = async (email: string, _password: string) => {\r\n    // Mock authentication - accept any email/password combination\r\n    const mockUser: User = {\r\n      uid: 'mock-user-id',\r\n      email,\r\n      displayName: email.split('@')[0],\r\n      photoURL: null\r\n    }\r\n    \r\n    setUser(mockUser)\r\n    localStorage.setItem('mockUser', JSON.stringify(mockUser))\r\n  }\r\n\r\n  const signUp = async (email: string, _password: string, displayName: string) => {\r\n    // Mock registration - accept any email/password combination\r\n    const mockUser: User = {\r\n      uid: 'mock-user-id',\r\n      email,\r\n      displayName,\r\n      photoURL: null\r\n    }\r\n    \r\n    setUser(mockUser)\r\n    localStorage.setItem('mockUser', JSON.stringify(mockUser))\r\n  }\r\n\r\n  const signOut = async () => {\r\n    setUser(null)\r\n    localStorage.removeItem('mockUser')\r\n  }\r\n\r\n  const signInWithGoogle = async () => {\r\n    // Mock Google sign in\r\n    const mockUser: User = {\r\n      uid: 'mock-google-user-id',\r\n      email: 'user@gmail.com',\r\n      displayName: 'Google User',\r\n      photoURL: 'https://via.placeholder.com/40'\r\n    }\r\n    \r\n    setUser(mockUser)\r\n    localStorage.setItem('mockUser', JSON.stringify(mockUser))\r\n  }\r\n\r\n  const value: AuthContextType = {\r\n    user,\r\n    loading,\r\n    signIn,\r\n    signUp,\r\n    signOut,\r\n    signInWithGoogle\r\n  }\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { Outlet } from 'react-router-dom'\r\n\r\nconst Layout: React.FC = () => {\r\n  return (\r\n    <div className=\"min-h-screen\">\r\n      <Outlet />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Layout\r\n","function r(e){var t,f,n=\"\";if(\"string\"==typeof e||\"number\"==typeof e)n+=e;else if(\"object\"==typeof e)if(Array.isArray(e)){var o=e.length;for(t=0;t<o;t++)e[t]&&(f=r(e[t]))&&(n&&(n+=\" \"),n+=f)}else for(f in e)e[f]&&(n&&(n+=\" \"),n+=f);return n}export function clsx(){for(var e,t,f=0,n=\"\",o=arguments.length;f<o;f++)(e=arguments[f])&&(t=r(e))&&(n&&(n+=\" \"),n+=t);return n}export default clsx;","import React from 'react'\r\nimport { clsx } from 'clsx'\r\n\r\ninterface ButtonProps extends React.ButtonHTMLAttributes<HTMLButtonElement> {\r\n  variant?: 'primary' | 'secondary' | 'outline' | 'ghost'\r\n  size?: 'sm' | 'md' | 'lg'\r\n  children: React.ReactNode\r\n}\r\n\r\nexport const Button: React.FC<ButtonProps> = ({\r\n  variant = 'primary',\r\n  size = 'md',\r\n  children,\r\n  className,\r\n  ...props\r\n}) => {\r\n  const baseClasses = 'inline-flex items-center justify-center rounded-lg font-medium transition-colors focus:outline-none focus:ring-2 focus:ring-offset-2 disabled:opacity-50 disabled:pointer-events-none'\r\n  \r\n  const variantClasses = {\r\n    primary: 'bg-primary-600 text-white hover:bg-primary-700 focus:ring-primary-500',\r\n    secondary: 'bg-gray-600 text-white hover:bg-gray-700 focus:ring-gray-500',\r\n    outline: 'border border-gray-300 bg-white text-gray-700 hover:bg-gray-50 focus:ring-primary-500',\r\n    ghost: 'text-gray-700 hover:bg-gray-100 focus:ring-primary-500'\r\n  }\r\n  \r\n  const sizeClasses = {\r\n    sm: 'px-3 py-1.5 text-sm',\r\n    md: 'px-4 py-2 text-base',\r\n    lg: 'px-6 py-3 text-lg'\r\n  }\r\n  \r\n  return (\r\n    <button\r\n      className={clsx(\r\n        baseClasses,\r\n        variantClasses[variant],\r\n        sizeClasses[size],\r\n        className\r\n      )}\r\n      {...props}\r\n    >\r\n      {children}\r\n    </button>\r\n  )\r\n}\r\n\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Button } from '@/components/ui/Button'\r\nimport { BookOpen, Sparkles, Users, Shield } from 'lucide-react'\r\n\r\nconst HomePage: React.FC = () => {\r\n  return (\r\n    <div className=\"min-h-screen\">\r\n      {/* Header */}\r\n      <header className=\"bg-white/80 backdrop-blur-sm border-b border-gray-200 sticky top-0 z-50\">\r\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\r\n          <div className=\"flex justify-between items-center h-16\">\r\n            <div className=\"flex items-center space-x-2\">\r\n              <BookOpen className=\"h-8 w-8 text-primary-600\" />\r\n              <span className=\"text-xl font-bold text-gray-900\">Arcana Editor</span>\r\n            </div>\r\n            <nav className=\"hidden md:flex space-x-8\">\r\n              <Link to=\"/editor\" className=\"text-gray-600 hover:text-primary-600 transition-colors\">\r\n                エディター\r\n              </Link>\r\n              <Link to=\"/dashboard\" className=\"text-gray-600 hover:text-primary-600 transition-colors\">\r\n                ダッシュボード\r\n              </Link>\r\n            </nav>\r\n            <div className=\"flex items-center space-x-4\">\r\n              <Link to=\"/login\">\r\n                <Button variant=\"outline\" size=\"sm\">\r\n                  ログイン\r\n                </Button>\r\n              </Link>\r\n              <Link to=\"/register\">\r\n                <Button size=\"sm\">\r\n                  新規登録\r\n                </Button>\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </header>\r\n\r\n      {/* Hero Section */}\r\n      <section className=\"pt-20 pb-16 px-4 sm:px-6 lg:px-8\">\r\n        <div className=\"max-w-7xl mx-auto text-center\">\r\n          <h1 className=\"text-4xl md:text-6xl font-bold text-gray-900 mb-6\">\r\n            AIが支援する\r\n            <span className=\"text-transparent bg-clip-text bg-gradient-to-r from-primary-600 to-purple-600\">\r\n              シナリオエディター\r\n            </span>\r\n          </h1>\r\n          <p className=\"text-xl text-gray-600 mb-8 max-w-3xl mx-auto\">\r\n            クリエイティブな物語をAIの力でより豊かに。直感的なエディターで、あなたの想像力を現実に。\r\n          </p>\r\n          <div className=\"flex flex-col sm:flex-row gap-4 justify-center\">\r\n            <Link to=\"/editor\">\r\n              <Button size=\"lg\" className=\"w-full sm:w-auto\">\r\n                <Sparkles className=\"mr-2 h-5 w-5\" />\r\n                エディターを始める\r\n              </Button>\r\n            </Link>\r\n            <a href=\"#features\">\r\n              <Button variant=\"outline\" size=\"lg\" className=\"w-full sm:w-auto\">\r\n                機能を見る\r\n              </Button>\r\n            </a>\r\n          </div>\r\n        </div>\r\n      </section>\r\n\r\n      {/* Features Section */}\r\n      <section id=\"features\" className=\"py-16 px-4 sm:px-6 lg:px-8\">\r\n        <div className=\"max-w-7xl mx-auto\">\r\n          <div className=\"text-center mb-16\">\r\n            <h2 className=\"text-3xl md:text-4xl font-bold text-gray-900 mb-4\">\r\n              主な機能\r\n            </h2>\r\n            <p className=\"text-xl text-gray-600 max-w-2xl mx-auto\">\r\n              AIの力を借りて、より良いシナリオを作成しましょう\r\n            </p>\r\n          </div>\r\n          \r\n          <div className=\"grid md:grid-cols-3 gap-8\">\r\n            <div className=\"bg-white rounded-xl p-8 shadow-lg hover:shadow-xl transition-shadow\">\r\n              <div className=\"bg-primary-100 w-16 h-16 rounded-lg flex items-center justify-center mb-6\">\r\n                <Sparkles className=\"h-8 w-8 text-primary-600\" />\r\n              </div>\r\n              <h3 className=\"text-xl font-semibold text-gray-900 mb-4\">AI補完機能</h3>\r\n              <p className=\"text-gray-600\">\r\n                物語の続きをAIが提案。創作の手が止まった時も、AIがあなたの創作活動をサポートします。\r\n              </p>\r\n            </div>\r\n            \r\n            <div className=\"bg-white rounded-xl p-8 shadow-lg hover:shadow-xl transition-shadow\">\r\n              <div className=\"bg-primary-100 w-16 h-16 rounded-lg flex items-center justify-center mb-6\">\r\n                <Users className=\"h-8 w-8 text-primary-600\" />\r\n              </div>\r\n              <h3 className=\"text-xl font-semibold text-gray-900 mb-4\">コラボレーション</h3>\r\n              <p className=\"text-gray-600\">\r\n                チームでの共同編集が可能。リアルタイムで複数人でのシナリオ作成をサポートします。\r\n              </p>\r\n            </div>\r\n            \r\n            <div className=\"bg-white rounded-xl p-8 shadow-lg hover:shadow-xl transition-shadow\">\r\n              <div className=\"bg-primary-100 w-16 h-16 rounded-lg flex items-center justify-center mb-6\">\r\n                <Shield className=\"h-8 w-8 text-primary-600\" />\r\n              </div>\r\n              <h3 className=\"text-xl font-semibold text-gray-900 mb-4\">セキュアな保存</h3>\r\n              <p className=\"text-gray-600\">\r\n                Firebaseの強力なセキュリティで、あなたの作品を安全に保存・管理します。\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n\r\n      {/* Footer */}\r\n      <footer className=\"bg-gray-900 text-white py-12 px-4 sm:px-6 lg:px-8\">\r\n        <div className=\"max-w-7xl mx-auto text-center\">\r\n          <div className=\"flex items-center justify-center space-x-2 mb-4\">\r\n            <BookOpen className=\"h-6 w-6\" />\r\n            <span className=\"text-lg font-semibold\">Arcana Editor</span>\r\n          </div>\r\n          <p className=\"text-gray-400\">\r\n            © 2025 Arcana Editor. All rights reserved.\r\n          </p>\r\n        </div>\r\n      </footer>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default HomePage\r\n","import React from 'react'\r\nimport { clsx } from 'clsx'\r\n\r\ninterface TextareaProps extends React.TextareaHTMLAttributes<HTMLTextAreaElement> {\r\n  label?: string\r\n  error?: string\r\n  helperText?: string\r\n}\r\n\r\nexport const Textarea = React.forwardRef<HTMLTextAreaElement, TextareaProps>(({\r\n  label,\r\n  error,\r\n  helperText,\r\n  className,\r\n  id,\r\n  ...props\r\n}, ref) => {\r\n  const inputId = id || `textarea-${Math.random().toString(36).substr(2, 9)}`\r\n  \r\n  return (\r\n    <div className=\"w-full\">\r\n      {label && (\r\n        <label htmlFor={inputId} className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n          {label}\r\n        </label>\r\n      )}\r\n      <textarea\r\n        ref={ref}\r\n        id={inputId}\r\n        className={clsx(\r\n          'w-full px-3 py-2 border rounded-lg shadow-sm transition-colors focus:outline-none focus:ring-2 focus:ring-offset-2 resize-vertical',\r\n          error\r\n            ? 'border-red-300 focus:ring-red-500'\r\n            : 'border-gray-300 focus:ring-primary-500',\r\n          className\r\n        )}\r\n        {...props}\r\n      />\r\n      {error && (\r\n        <p className=\"mt-1 text-sm text-red-600\">{error}</p>\r\n      )}\r\n      {helperText && !error && (\r\n        <p className=\"mt-1 text-sm text-gray-500\">{helperText}</p>\r\n      )}\r\n    </div>\r\n  )\r\n})\r\n\r\n","import React from 'react'\r\nimport { clsx } from 'clsx'\r\n\r\ninterface InputProps extends React.InputHTMLAttributes<HTMLInputElement> {\r\n  label?: string\r\n  error?: string\r\n  helperText?: string\r\n}\r\n\r\nexport const Input: React.FC<InputProps> = ({\r\n  label,\r\n  error,\r\n  helperText,\r\n  className,\r\n  id,\r\n  ...props\r\n}) => {\r\n  const inputId = id || `input-${Math.random().toString(36).substr(2, 9)}`\r\n  \r\n  return (\r\n    <div className=\"w-full\">\r\n      {label && (\r\n        <label htmlFor={inputId} className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n          {label}\r\n        </label>\r\n      )}\r\n      <input\r\n        id={inputId}\r\n        className={clsx(\r\n          'w-full px-3 py-2 border rounded-lg shadow-sm transition-colors focus:outline-none focus:ring-2 focus:ring-offset-2',\r\n          error\r\n            ? 'border-red-300 focus:ring-red-500'\r\n            : 'border-gray-300 focus:ring-primary-500',\r\n          className\r\n        )}\r\n        {...props}\r\n      />\r\n      {error && (\r\n        <p className=\"mt-1 text-sm text-red-600\">{error}</p>\r\n      )}\r\n      {helperText && !error && (\r\n        <p className=\"mt-1 text-sm text-gray-500\">{helperText}</p>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\n","export interface Scenario {\r\n  id: string\r\n  title: string\r\n  content: string\r\n  createdAt: Date\r\n  updatedAt: Date\r\n  tags: string[]\r\n  isPublic: boolean\r\n  authorId: string\r\n}\r\n\r\nexport interface UserProfile {\r\n  id: string\r\n  email: string\r\n  displayName: string\r\n  photoURL?: string\r\n  createdAt: Date\r\n  isAllowed: boolean\r\n}\r\n\r\n// Mock AI suggestions\r\nexport const mockAISuggestions = [\r\n  \"主人公は立ち上がり、決意を込めて言った。\",\r\n  \"その時、不思議な光が現れて、状況を一変させた。\",\r\n  \"彼女の心に新しい希望が芽生え始めていた。\",\r\n  \"謎めいた影が近づいてくる。\",\r\n  \"突然、雷鳴が轟き、空が暗くなった。\",\r\n  \"古い城の扉がきしみながら開いた。\",\r\n  \"魔法の剣が光り始めた。\",\r\n  \"風が物語を運んでくる。\",\r\n  \"星が瞬いて、新しい冒険を予感させる。\",\r\n  \"時間が止まったような静寂が訪れた。\"\r\n]\r\n\r\n// Mock scenarios data\r\nconst mockScenarios: Scenario[] = [\r\n  {\r\n    id: '1',\r\n    title: '冒険の始まり',\r\n    content: `主人公のアレックスは小さな村で平凡な生活を送っていた。毎日同じような日々が続き、何か変化を求めていた。\r\n\r\nある朝、村の外れで不思議な光を発する石を発見した。その石に触れた瞬間、世界が一変した。\r\n\r\n「これは...魔法の石？」アレックスは呟いた。\r\n\r\nその時、石から声が聞こえてきた。「選ばれし者よ、君の冒険が今始まる...」`,\r\n    createdAt: new Date('2024-01-15'),\r\n    updatedAt: new Date('2024-01-20'),\r\n    tags: ['冒険', 'ファンタジー', '魔法'],\r\n    isPublic: true,\r\n    authorId: 'mock-user-id'\r\n  },\r\n  {\r\n    id: '2',\r\n    title: '謎の遺跡',\r\n    content: `考古学者のサラは古代の遺跡で不思議な発見をした。壁に刻まれた文字は、これまで見たことのない言語だった。\r\n\r\n「この文字...古代エジプトとも、マヤ文明とも違う」サラは顕微鏡で文字を詳しく調べた。\r\n\r\n突然、遺跡の奥から光が差し込んだ。それは自然光ではない。人工的な光だった。\r\n\r\n「誰かいるのか？」サラは懐中電灯を手に取り、光の方向へ歩き始めた。`,\r\n    createdAt: new Date('2024-01-10'),\r\n    updatedAt: new Date('2024-01-18'),\r\n    tags: ['ミステリー', '古代', '考古学'],\r\n    isPublic: false,\r\n    authorId: 'mock-user-id'\r\n  },\r\n  {\r\n    id: '3',\r\n    title: '宇宙の旅人',\r\n    content: `宇宙船パイオニア号は未知の惑星に向かっていた。船長のケンは地球を離れてから3年が経過していた。\r\n\r\n「地球からの最後の通信から6ヶ月が経った」ケンは航海日誌に記録した。\r\n\r\nその時、船の警報システムが作動した。「未知の物体が接近中」という警告音が響いた。\r\n\r\nケンはスクリーンを見つめた。そこには、これまで見たことのない巨大な宇宙船が映し出されていた。`,\r\n    createdAt: new Date('2024-01-05'),\r\n    updatedAt: new Date('2024-01-12'),\r\n    tags: ['SF', '宇宙', '冒険'],\r\n    isPublic: true,\r\n    authorId: 'mock-user-id'\r\n  }\r\n]\r\n\r\nclass MockDataService {\r\n  private scenarios: Scenario[] = [...mockScenarios]\r\n\r\n  // Get all scenarios for a user\r\n  getUserScenarios(userId: string): Scenario[] {\r\n    return this.scenarios.filter(s => s.authorId === userId)\r\n  }\r\n\r\n  // Get a specific scenario\r\n  getScenario(id: string): Scenario | null {\r\n    return this.scenarios.find(s => s.id === id) || null\r\n  }\r\n\r\n  // Create a new scenario\r\n  createScenario(scenario: Omit<Scenario, 'id' | 'createdAt' | 'updatedAt'>): string {\r\n    const newScenario: Scenario = {\r\n      ...scenario,\r\n      id: Date.now().toString(),\r\n      createdAt: new Date(),\r\n      updatedAt: new Date()\r\n    }\r\n    this.scenarios.push(newScenario)\r\n    this.saveToLocalStorage()\r\n    return newScenario.id\r\n  }\r\n\r\n  // Update a scenario\r\n  updateScenario(id: string, updates: Partial<Scenario>): void {\r\n    const index = this.scenarios.findIndex(s => s.id === id)\r\n    if (index !== -1) {\r\n      this.scenarios[index] = {\r\n        ...this.scenarios[index],\r\n        ...updates,\r\n        updatedAt: new Date()\r\n      }\r\n      this.saveToLocalStorage()\r\n    }\r\n  }\r\n\r\n  // Delete a scenario\r\n  deleteScenario(id: string): void {\r\n    this.scenarios = this.scenarios.filter(s => s.id !== id)\r\n    this.saveToLocalStorage()\r\n  }\r\n\r\n  // Get public scenarios\r\n  getPublicScenarios(): Scenario[] {\r\n    return this.scenarios.filter(s => s.isPublic)\r\n  }\r\n\r\n  // Generate AI suggestions\r\n  generateAISuggestions(): string[] {\r\n    // Return random suggestions\r\n    const shuffled = [...mockAISuggestions].sort(() => 0.5 - Math.random())\r\n    return shuffled.slice(0, 5)\r\n  }\r\n\r\n  // Load from localStorage\r\n  loadFromLocalStorage(): void {\r\n    const saved = localStorage.getItem('mockScenarios')\r\n    if (saved) {\r\n      try {\r\n        const parsed = JSON.parse(saved)\r\n        this.scenarios = parsed.map((s: any) => ({\r\n          ...s,\r\n          createdAt: new Date(s.createdAt),\r\n          updatedAt: new Date(s.updatedAt)\r\n        }))\r\n      } catch (error) {\r\n        console.error('Error loading scenarios from localStorage:', error)\r\n      }\r\n    }\r\n  }\r\n\r\n  // Save to localStorage\r\n  private saveToLocalStorage(): void {\r\n    localStorage.setItem('mockScenarios', JSON.stringify(this.scenarios))\r\n  }\r\n\r\n  // Initialize service\r\n  constructor() {\r\n    this.loadFromLocalStorage()\r\n  }\r\n}\r\n\r\nexport const mockDataService = new MockDataService()\r\n","import React, { useState, useRef } from 'react'\r\nimport { Button } from '@/components/ui/Button'\r\nimport { Textarea } from '@/components/ui/Textarea'\r\nimport { Input } from '@/components/ui/Input'\r\nimport { mockDataService } from '@/services/mockDataService'\r\nimport { useAuth } from '@/components/providers/MockAuthProvider'\r\nimport { \r\n  Save, \r\n  Sparkles, \r\n  Plus, \r\n  Copy, \r\n  Download\r\n} from 'lucide-react'\r\n\r\ninterface ScenarioEditorProps {\r\n  initialContent?: string\r\n  onSave?: (scenario: any) => void\r\n  onLoad?: () => void\r\n}\r\n\r\nexport const ScenarioEditor: React.FC<ScenarioEditorProps> = ({\r\n  initialContent = '',\r\n  onSave\r\n}) => {\r\n  const { user } = useAuth()\r\n  const [content, setContent] = useState(initialContent)\r\n  const [title, setTitle] = useState('')\r\n  const [tags, setTags] = useState<string[]>([])\r\n  const [newTag, setNewTag] = useState('')\r\n  const [isPublic, setIsPublic] = useState(false)\r\n  const [aiSuggestions, setAiSuggestions] = useState<string[]>([])\r\n  const [isGenerating, setIsGenerating] = useState(false)\r\n  const [cursorPosition, setCursorPosition] = useState(0)\r\n  const [scenarioId, setScenarioId] = useState<string | null>(null)\r\n  \r\n  const textareaRef = useRef<HTMLTextAreaElement>(null)\r\n\r\n  // AI completion function using mock data\r\n  const generateAICompletion = async () => {\r\n    setIsGenerating(true)\r\n    try {\r\n      // Simulate API call delay\r\n      await new Promise(resolve => setTimeout(resolve, 1500))\r\n      \r\n      const suggestions = mockDataService.generateAISuggestions()\r\n      setAiSuggestions(suggestions)\r\n    } catch (error) {\r\n      console.error('AI completion error:', error)\r\n    } finally {\r\n      setIsGenerating(false)\r\n    }\r\n  }\r\n\r\n  const handleTextChange = (e: React.ChangeEvent<HTMLTextAreaElement>) => {\r\n    setContent(e.target.value)\r\n    setCursorPosition(e.target.selectionStart)\r\n  }\r\n\r\n  const handleCursorPosition = () => {\r\n    if (textareaRef.current) {\r\n      setCursorPosition(textareaRef.current.selectionStart)\r\n    }\r\n  }\r\n\r\n  const insertSuggestion = (suggestion: string) => {\r\n    const beforeCursor = content.substring(0, cursorPosition)\r\n    const afterCursor = content.substring(cursorPosition)\r\n    const newContent = beforeCursor + suggestion + afterCursor\r\n    setContent(newContent)\r\n    setAiSuggestions([])\r\n    \r\n    // Focus back to textarea\r\n    setTimeout(() => {\r\n      if (textareaRef.current) {\r\n        const newPosition = cursorPosition + suggestion.length\r\n        textareaRef.current.focus()\r\n        textareaRef.current.setSelectionRange(newPosition, newPosition)\r\n      }\r\n    }, 100)\r\n  }\r\n\r\n  const addTag = () => {\r\n    if (newTag.trim() && !tags.includes(newTag.trim())) {\r\n      setTags([...tags, newTag.trim()])\r\n      setNewTag('')\r\n    }\r\n  }\r\n\r\n  const removeTag = (tagToRemove: string) => {\r\n    setTags(tags.filter(tag => tag !== tagToRemove))\r\n  }\r\n\r\n  const handleSave = () => {\r\n    if (!user) {\r\n      alert('ログインが必要です')\r\n      return\r\n    }\r\n\r\n    try {\r\n      if (scenarioId) {\r\n        // Update existing scenario\r\n        mockDataService.updateScenario(scenarioId, {\r\n          title,\r\n          content,\r\n          tags,\r\n          isPublic\r\n        })\r\n      } else {\r\n        // Create new scenario\r\n        const newId = mockDataService.createScenario({\r\n          title: title || '無題のシナリオ',\r\n          content,\r\n          tags,\r\n          isPublic,\r\n          authorId: user.uid\r\n        })\r\n        setScenarioId(newId)\r\n      }\r\n      \r\n      if (onSave) {\r\n        onSave({\r\n          title,\r\n          content,\r\n          tags,\r\n          isPublic\r\n        })\r\n      }\r\n      \r\n      alert('シナリオが保存されました！')\r\n    } catch (error) {\r\n      console.error('Save error:', error)\r\n      alert('保存に失敗しました')\r\n    }\r\n  }\r\n\r\n  const copyToClipboard = async () => {\r\n    try {\r\n      await navigator.clipboard.writeText(content)\r\n      alert('クリップボードにコピーしました')\r\n    } catch (error) {\r\n      console.error('Copy failed:', error)\r\n    }\r\n  }\r\n\r\n  const exportContent = () => {\r\n    const dataStr = JSON.stringify({\r\n      title,\r\n      content,\r\n      tags,\r\n      isPublic,\r\n      timestamp: new Date().toISOString()\r\n    }, null, 2)\r\n    \r\n    const dataBlob = new Blob([dataStr], { type: 'application/json' })\r\n    const url = URL.createObjectURL(dataBlob)\r\n    const link = document.createElement('a')\r\n    link.href = url\r\n    link.download = `${title || 'scenario'}.json`\r\n    link.click()\r\n    URL.revokeObjectURL(url)\r\n  }\r\n\r\n  return (\r\n    <div className=\"max-w-4xl mx-auto p-6 space-y-6\">\r\n      {/* Header */}\r\n      <div className=\"flex items-center justify-between\">\r\n        <h1 className=\"text-2xl font-bold text-gray-900\">シナリオエディター</h1>\r\n        <div className=\"flex space-x-2\">\r\n          <Button variant=\"outline\" onClick={copyToClipboard}>\r\n            <Copy className=\"h-4 w-4 mr-2\" />\r\n            コピー\r\n          </Button>\r\n          <Button variant=\"outline\" onClick={exportContent}>\r\n            <Download className=\"h-4 w-4 mr-2\" />\r\n            エクスポート\r\n          </Button>\r\n          <Button onClick={handleSave}>\r\n            <Save className=\"h-4 w-4 mr-2\" />\r\n            保存\r\n          </Button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Title and Metadata */}\r\n      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n        <Input\r\n          label=\"タイトル\"\r\n          value={title}\r\n          onChange={(e) => setTitle(e.target.value)}\r\n          placeholder=\"シナリオのタイトルを入力\"\r\n        />\r\n        \r\n        <div className=\"flex items-center space-x-4\">\r\n          <label className=\"flex items-center\">\r\n            <input\r\n              type=\"checkbox\"\r\n              checked={isPublic}\r\n              onChange={(e) => setIsPublic(e.target.checked)}\r\n              className=\"h-4 w-4 text-primary-600 focus:ring-primary-500 border-gray-300 rounded\"\r\n            />\r\n            <span className=\"ml-2 text-sm text-gray-700\">公開</span>\r\n          </label>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Tags */}\r\n      <div>\r\n        <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n          タグ\r\n        </label>\r\n        <div className=\"flex flex-wrap gap-2 mb-2\">\r\n          {tags.map((tag, index) => (\r\n            <span\r\n              key={index}\r\n              className=\"inline-flex items-center px-3 py-1 rounded-full text-sm bg-primary-100 text-primary-800\"\r\n            >\r\n              {tag}\r\n              <button\r\n                onClick={() => removeTag(tag)}\r\n                className=\"ml-2 text-primary-600 hover:text-primary-800\"\r\n              >\r\n                ×\r\n              </button>\r\n            </span>\r\n          ))}\r\n        </div>\r\n        <div className=\"flex space-x-2\">\r\n          <Input\r\n            value={newTag}\r\n            onChange={(e) => setNewTag(e.target.value)}\r\n            placeholder=\"新しいタグを入力\"\r\n            onKeyPress={(e) => e.key === 'Enter' && addTag()}\r\n          />\r\n          <Button variant=\"outline\" onClick={addTag}>\r\n            <Plus className=\"h-4 w-4\" />\r\n          </Button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* AI Completion */}\r\n      <div className=\"bg-gradient-to-r from-purple-50 to-blue-50 p-4 rounded-lg\">\r\n        <div className=\"flex items-center justify-between mb-4\">\r\n          <h3 className=\"text-lg font-semibold text-gray-900 flex items-center\">\r\n            <Sparkles className=\"h-5 w-5 mr-2 text-purple-600\" />\r\n            AI補完\r\n          </h3>\r\n          <Button\r\n            variant=\"outline\"\r\n            size=\"sm\"\r\n            onClick={() => generateAICompletion()}\r\n            disabled={isGenerating}\r\n          >\r\n            {isGenerating ? '生成中...' : '続きを生成'}\r\n          </Button>\r\n        </div>\r\n        \r\n        {aiSuggestions.length > 0 && (\r\n          <div className=\"space-y-2\">\r\n            <p className=\"text-sm text-gray-600\">以下の提案から選択してください：</p>\r\n            {aiSuggestions.map((suggestion, index) => (\r\n              <div\r\n                key={index}\r\n                className=\"ai-suggestion cursor-pointer\"\r\n                onClick={() => insertSuggestion(suggestion)}\r\n              >\r\n                {suggestion}\r\n              </div>\r\n            ))}\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {/* Main Editor */}\r\n      <div>\r\n        <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n          シナリオ内容\r\n        </label>\r\n        <Textarea\r\n          ref={textareaRef}\r\n          value={content}\r\n          onChange={handleTextChange}\r\n          onSelect={handleCursorPosition}\r\n          onFocus={handleCursorPosition}\r\n          placeholder=\"シナリオの内容を入力してください...\"\r\n          className=\"min-h-96 font-mono text-base leading-relaxed\"\r\n        />\r\n        <div className=\"mt-2 text-sm text-gray-500\">\r\n          文字数: {content.length} | カーソル位置: {cursorPosition}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Character Count and Stats */}\r\n      <div className=\"bg-gray-50 p-4 rounded-lg\">\r\n        <h3 className=\"text-sm font-medium text-gray-700 mb-2\">統計情報</h3>\r\n        <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4 text-sm\">\r\n          <div>\r\n            <span className=\"text-gray-500\">文字数:</span>\r\n            <span className=\"ml-2 font-medium\">{content.length}</span>\r\n          </div>\r\n          <div>\r\n            <span className=\"text-gray-500\">単語数:</span>\r\n            <span className=\"ml-2 font-medium\">{content.split(/\\s+/).filter(word => word.length > 0).length}</span>\r\n          </div>\r\n          <div>\r\n            <span className=\"text-gray-500\">行数:</span>\r\n            <span className=\"ml-2 font-medium\">{content.split('\\n').length}</span>\r\n          </div>\r\n          <div>\r\n            <span className=\"text-gray-500\">段落数:</span>\r\n            <span className=\"ml-2 font-medium\">{content.split('\\n\\n').filter(p => p.trim().length > 0).length}</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\n\r\n\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useSearchParams } from 'react-router-dom'\r\nimport { ScenarioEditor } from '@/components/editor/ScenarioEditor'\r\nimport { mockDataService } from '@/services/mockDataService'\r\n\r\nconst EditorPage: React.FC = () => {\r\n  const [searchParams] = useSearchParams()\r\n  const [initialContent, setInitialContent] = useState('')\r\n  const scenarioId = searchParams.get('id')\r\n\r\n  useEffect(() => {\r\n    if (scenarioId) {\r\n      const scenario = mockDataService.getScenario(scenarioId)\r\n      if (scenario) {\r\n        setInitialContent(scenario.content)\r\n      }\r\n    }\r\n  }, [scenarioId])\r\n\r\n  const handleSave = (scenario: any) => {\r\n    console.log('Saving scenario:', scenario)\r\n  }\r\n\r\n  return (\r\n    <div className=\"min-h-screen\">\r\n      <ScenarioEditor\r\n        initialContent={initialContent}\r\n        onSave={handleSave}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default EditorPage\r\n","import React from 'react'\r\nimport { Link, useNavigate } from 'react-router-dom'\r\nimport { useAuth } from '@/components/providers/MockAuthProvider'\r\nimport { Button } from '@/components/ui/Button'\r\nimport { mockDataService, Scenario } from '@/services/mockDataService'\r\nimport { \r\n  BookOpen, \r\n  Plus, \r\n  Edit, \r\n  Trash2, \r\n  Eye, \r\n  Calendar,\r\n  User,\r\n  LogOut\r\n} from 'lucide-react'\r\n\r\nconst DashboardPage: React.FC = () => {\r\n  const { user, signOut } = useAuth()\r\n  const navigate = useNavigate()\r\n  const [scenarios, setScenarios] = React.useState<Scenario[]>([])\r\n  const [isLoadingScenarios, setIsLoadingScenarios] = React.useState(true)\r\n\r\n  React.useEffect(() => {\r\n    if (!user) {\r\n      navigate('/login')\r\n    }\r\n  }, [user, navigate])\r\n\r\n  React.useEffect(() => {\r\n    if (user) {\r\n      loadScenarios()\r\n    }\r\n  }, [user])\r\n\r\n  const loadScenarios = async () => {\r\n    try {\r\n      if (user) {\r\n        const userScenarios = mockDataService.getUserScenarios(user.uid)\r\n        setScenarios(userScenarios)\r\n      }\r\n    } catch (error) {\r\n      console.error('Error loading scenarios:', error)\r\n    } finally {\r\n      setIsLoadingScenarios(false)\r\n    }\r\n  }\r\n\r\n  const handleSignOut = async () => {\r\n    try {\r\n      await signOut()\r\n      navigate('/')\r\n    } catch (error) {\r\n      console.error('Sign out error:', error)\r\n    }\r\n  }\r\n\r\n  const handleDeleteScenario = async (id: string) => {\r\n    if (confirm('このシナリオを削除しますか？')) {\r\n      try {\r\n        mockDataService.deleteScenario(id)\r\n        setScenarios(scenarios.filter(s => s.id !== id))\r\n      } catch (error) {\r\n        console.error('Delete error:', error)\r\n      }\r\n    }\r\n  }\r\n\r\n  if (isLoadingScenarios) {\r\n    return (\r\n      <div className=\"min-h-screen flex items-center justify-center\">\r\n        <div className=\"animate-spin rounded-full h-32 w-32 border-b-2 border-primary-600\"></div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  if (!user) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-50\">\r\n      {/* Header */}\r\n      <header className=\"bg-white shadow-sm border-b border-gray-200\">\r\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\r\n          <div className=\"flex justify-between items-center h-16\">\r\n            <div className=\"flex items-center space-x-2\">\r\n              <BookOpen className=\"h-8 w-8 text-primary-600\" />\r\n              <span className=\"text-xl font-bold text-gray-900\">Arcana Editor</span>\r\n            </div>\r\n            \r\n            <nav className=\"hidden md:flex space-x-8\">\r\n              <Link to=\"/dashboard\" className=\"text-primary-600 font-medium\">\r\n                ダッシュボード\r\n              </Link>\r\n              <Link to=\"/editor\" className=\"text-gray-600 hover:text-primary-600 transition-colors\">\r\n                エディター\r\n              </Link>\r\n            </nav>\r\n\r\n            <div className=\"flex items-center space-x-4\">\r\n              <div className=\"flex items-center space-x-2\">\r\n                <User className=\"h-5 w-5 text-gray-400\" />\r\n                <span className=\"text-sm text-gray-700\">{user.displayName || user.email}</span>\r\n              </div>\r\n              <Button variant=\"outline\" size=\"sm\" onClick={handleSignOut}>\r\n                <LogOut className=\"h-4 w-4 mr-2\" />\r\n                ログアウト\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </header>\r\n\r\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\r\n        {/* Welcome Section */}\r\n        <div className=\"mb-8\">\r\n          <h1 className=\"text-3xl font-bold text-gray-900 mb-2\">\r\n            こんにちは、{user.displayName || 'ユーザー'}さん\r\n          </h1>\r\n          <p className=\"text-gray-600\">\r\n            あなたのシナリオを管理し、新しい物語を作成しましょう。\r\n          </p>\r\n        </div>\r\n\r\n        {/* Quick Actions */}\r\n        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6 mb-8\">\r\n          <Link to=\"/editor\">\r\n            <div className=\"bg-white rounded-lg shadow-sm border border-gray-200 p-6 hover:shadow-md transition-shadow cursor-pointer\">\r\n              <div className=\"flex items-center space-x-3\">\r\n                <div className=\"bg-primary-100 p-3 rounded-lg\">\r\n                  <Plus className=\"h-6 w-6 text-primary-600\" />\r\n                </div>\r\n                <div>\r\n                  <h3 className=\"text-lg font-semibold text-gray-900\">新しいシナリオ</h3>\r\n                  <p className=\"text-gray-600 text-sm\">空のエディターから始める</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </Link>\r\n\r\n          <div className=\"bg-white rounded-lg shadow-sm border border-gray-200 p-6\">\r\n            <div className=\"flex items-center space-x-3\">\r\n              <div className=\"bg-green-100 p-3 rounded-lg\">\r\n                <BookOpen className=\"h-6 w-6 text-green-600\" />\r\n              </div>\r\n              <div>\r\n                <h3 className=\"text-lg font-semibold text-gray-900\">総シナリオ数</h3>\r\n                <p className=\"text-2xl font-bold text-green-600\">{scenarios.length}</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"bg-white rounded-lg shadow-sm border border-gray-200 p-6\">\r\n            <div className=\"flex items-center space-x-3\">\r\n              <div className=\"bg-blue-100 p-3 rounded-lg\">\r\n                <Eye className=\"h-6 w-6 text-blue-600\" />\r\n              </div>\r\n              <div>\r\n                <h3 className=\"text-lg font-semibold text-gray-900\">公開シナリオ</h3>\r\n                <p className=\"text-2xl font-bold text-blue-600\">\r\n                  {scenarios.filter(s => s.isPublic).length}\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Scenarios List */}\r\n        <div className=\"bg-white rounded-lg shadow-sm border border-gray-200\">\r\n          <div className=\"px-6 py-4 border-b border-gray-200\">\r\n            <h2 className=\"text-xl font-semibold text-gray-900\">あなたのシナリオ</h2>\r\n          </div>\r\n\r\n          {scenarios.length === 0 ? (\r\n            <div className=\"px-6 py-12 text-center\">\r\n              <BookOpen className=\"h-12 w-12 text-gray-400 mx-auto mb-4\" />\r\n              <h3 className=\"text-lg font-medium text-gray-900 mb-2\">\r\n                まだシナリオがありません\r\n              </h3>\r\n              <p className=\"text-gray-600 mb-6\">\r\n                最初のシナリオを作成して、物語を始めましょう。\r\n              </p>\r\n              <Link to=\"/editor\">\r\n                <Button>\r\n                  <Plus className=\"h-4 w-4 mr-2\" />\r\n                  新しいシナリオを作成\r\n                </Button>\r\n              </Link>\r\n            </div>\r\n          ) : (\r\n            <div className=\"divide-y divide-gray-200\">\r\n              {scenarios.map((scenario) => (\r\n                <div key={scenario.id} className=\"px-6 py-4 hover:bg-gray-50\">\r\n                  <div className=\"flex items-center justify-between\">\r\n                    <div className=\"flex-1\">\r\n                      <div className=\"flex items-center space-x-3\">\r\n                        <h3 className=\"text-lg font-medium text-gray-900\">\r\n                          {scenario.title}\r\n                        </h3>\r\n                        {scenario.isPublic && (\r\n                          <span className=\"inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-green-100 text-green-800\">\r\n                            公開\r\n                          </span>\r\n                        )}\r\n                      </div>\r\n                      <p className=\"text-gray-600 mt-1 line-clamp-2\">\r\n                        {scenario.content.substring(0, 150)}...\r\n                      </p>\r\n                      <div className=\"flex items-center space-x-4 mt-2 text-sm text-gray-500\">\r\n                        <div className=\"flex items-center space-x-1\">\r\n                          <Calendar className=\"h-4 w-4\" />\r\n                          <span>更新: {scenario.updatedAt.toLocaleDateString('ja-JP')}</span>\r\n                        </div>\r\n                        <div className=\"flex space-x-1\">\r\n                          {scenario.tags.map((tag, index) => (\r\n                            <span\r\n                              key={index}\r\n                              className=\"inline-flex items-center px-2 py-1 rounded text-xs bg-gray-100 text-gray-600\"\r\n                            >\r\n                              {tag}\r\n                            </span>\r\n                          ))}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"flex items-center space-x-2\">\r\n                      <Link to={`/editor?id=${scenario.id}`}>\r\n                        <Button variant=\"outline\" size=\"sm\">\r\n                          <Edit className=\"h-4 w-4 mr-1\" />\r\n                          編集\r\n                        </Button>\r\n                      </Link>\r\n                      <Button\r\n                        variant=\"outline\"\r\n                        size=\"sm\"\r\n                        onClick={() => handleDeleteScenario(scenario.id)}\r\n                        className=\"text-red-600 hover:text-red-700 hover:bg-red-50\"\r\n                      >\r\n                        <Trash2 className=\"h-4 w-4\" />\r\n                      </Button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DashboardPage\r\n","import React, { useState } from 'react'\r\nimport { Link, useNavigate } from 'react-router-dom'\r\nimport { useAuth } from '@/components/providers/MockAuthProvider'\r\nimport { Button } from '@/components/ui/Button'\r\nimport { Input } from '@/components/ui/Input'\r\nimport { BookOpen, Eye, EyeOff } from 'lucide-react'\r\n\r\nconst LoginPage: React.FC = () => {\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [showPassword, setShowPassword] = useState(false)\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const [error, setError] = useState('')\r\n\r\n  const { signIn } = useAuth()\r\n  const navigate = useNavigate()\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault()\r\n    setIsLoading(true)\r\n    setError('')\r\n\r\n    try {\r\n      await signIn(email, password)\r\n      navigate('/dashboard')\r\n    } catch (error: any) {\r\n      setError(error.message || 'ログインに失敗しました')\r\n    } finally {\r\n      setIsLoading(false)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"min-h-screen flex items-center justify-center py-12 px-4 sm:px-6 lg:px-8\">\r\n      <div className=\"max-w-md w-full space-y-8\">\r\n        {/* Header */}\r\n        <div className=\"text-center\">\r\n          <div className=\"flex justify-center\">\r\n            <BookOpen className=\"h-12 w-12 text-primary-600\" />\r\n          </div>\r\n          <h2 className=\"mt-6 text-3xl font-extrabold text-gray-900\">\r\n            アカウントにログイン\r\n          </h2>\r\n          <p className=\"mt-2 text-sm text-gray-600\">\r\n            または{' '}\r\n            <Link to=\"/register\" className=\"font-medium text-primary-600 hover:text-primary-500\">\r\n              新規アカウントを作成\r\n            </Link>\r\n          </p>\r\n        </div>\r\n\r\n        {/* Form */}\r\n        <form className=\"mt-8 space-y-6\" onSubmit={handleSubmit}>\r\n          {error && (\r\n            <div className=\"bg-red-50 border border-red-200 text-red-600 px-4 py-3 rounded-md text-sm\">\r\n              {error}\r\n            </div>\r\n          )}\r\n\r\n          <div className=\"space-y-4\">\r\n            <Input\r\n              label=\"メールアドレス\"\r\n              type=\"email\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n              placeholder=\"your@email.com\"\r\n              required\r\n            />\r\n\r\n            <div className=\"relative\">\r\n              <Input\r\n                label=\"パスワード\"\r\n                type={showPassword ? 'text' : 'password'}\r\n                value={password}\r\n                onChange={(e) => setPassword(e.target.value)}\r\n                placeholder=\"パスワードを入力\"\r\n                required\r\n              />\r\n              <button\r\n                type=\"button\"\r\n                className=\"absolute right-3 top-8 text-gray-400 hover:text-gray-600\"\r\n                onClick={() => setShowPassword(!showPassword)}\r\n              >\r\n                {showPassword ? <EyeOff className=\"h-5 w-5\" /> : <Eye className=\"h-5 w-5\" />}\r\n              </button>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"flex items-center justify-between\">\r\n            <div className=\"flex items-center\">\r\n              <input\r\n                id=\"remember-me\"\r\n                name=\"remember-me\"\r\n                type=\"checkbox\"\r\n                className=\"h-4 w-4 text-primary-600 focus:ring-primary-500 border-gray-300 rounded\"\r\n              />\r\n              <label htmlFor=\"remember-me\" className=\"ml-2 block text-sm text-gray-900\">\r\n                ログイン状態を保持\r\n              </label>\r\n            </div>\r\n\r\n            <div className=\"text-sm\">\r\n              <a href=\"#\" className=\"font-medium text-primary-600 hover:text-primary-500\">\r\n                パスワードを忘れましたか？\r\n              </a>\r\n            </div>\r\n          </div>\r\n\r\n          <div>\r\n            <Button\r\n              type=\"submit\"\r\n              className=\"w-full\"\r\n              disabled={isLoading}\r\n            >\r\n              {isLoading ? 'ログイン中...' : 'ログイン'}\r\n            </Button>\r\n          </div>\r\n\r\n          <div className=\"text-center\">\r\n            <Link to=\"/\" className=\"text-sm text-gray-600 hover:text-gray-500\">\r\n              ホームに戻る\r\n            </Link>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LoginPage\r\n","import React, { useState } from 'react'\r\nimport { Link, useNavigate } from 'react-router-dom'\r\nimport { useAuth } from '@/components/providers/MockAuthProvider'\r\nimport { Button } from '@/components/ui/Button'\r\nimport { Input } from '@/components/ui/Input'\r\nimport { BookOpen, Eye, EyeOff } from 'lucide-react'\r\n\r\nconst RegisterPage: React.FC = () => {\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [confirmPassword, setConfirmPassword] = useState('')\r\n  const [displayName, setDisplayName] = useState('')\r\n  const [showPassword, setShowPassword] = useState(false)\r\n  const [showConfirmPassword, setShowConfirmPassword] = useState(false)\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const [error, setError] = useState('')\r\n\r\n  const { signUp } = useAuth()\r\n  const navigate = useNavigate()\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault()\r\n    setIsLoading(true)\r\n    setError('')\r\n\r\n    if (password !== confirmPassword) {\r\n      setError('パスワードが一致しません')\r\n      setIsLoading(false)\r\n      return\r\n    }\r\n\r\n    if (password.length < 6) {\r\n      setError('パスワードは6文字以上で入力してください')\r\n      setIsLoading(false)\r\n      return\r\n    }\r\n\r\n    try {\r\n      await signUp(email, password, displayName)\r\n      navigate('/dashboard')\r\n    } catch (error: any) {\r\n      setError(error.message || 'アカウント作成に失敗しました')\r\n    } finally {\r\n      setIsLoading(false)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"min-h-screen flex items-center justify-center py-12 px-4 sm:px-6 lg:px-8\">\r\n      <div className=\"max-w-md w-full space-y-8\">\r\n        {/* Header */}\r\n        <div className=\"text-center\">\r\n          <div className=\"flex justify-center\">\r\n            <BookOpen className=\"h-12 w-12 text-primary-600\" />\r\n          </div>\r\n          <h2 className=\"mt-6 text-3xl font-extrabold text-gray-900\">\r\n            新規アカウント作成\r\n          </h2>\r\n          <p className=\"mt-2 text-sm text-gray-600\">\r\n            または{' '}\r\n            <Link to=\"/login\" className=\"font-medium text-primary-600 hover:text-primary-500\">\r\n              既存のアカウントでログイン\r\n            </Link>\r\n          </p>\r\n        </div>\r\n\r\n        {/* Form */}\r\n        <form className=\"mt-8 space-y-6\" onSubmit={handleSubmit}>\r\n          {error && (\r\n            <div className=\"bg-red-50 border border-red-200 text-red-600 px-4 py-3 rounded-md text-sm\">\r\n              {error}\r\n            </div>\r\n          )}\r\n\r\n          <div className=\"space-y-4\">\r\n            <Input\r\n              label=\"表示名\"\r\n              type=\"text\"\r\n              value={displayName}\r\n              onChange={(e) => setDisplayName(e.target.value)}\r\n              placeholder=\"あなたの名前\"\r\n              required\r\n            />\r\n\r\n            <Input\r\n              label=\"メールアドレス\"\r\n              type=\"email\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n              placeholder=\"your@email.com\"\r\n              required\r\n            />\r\n\r\n            <div className=\"relative\">\r\n              <Input\r\n                label=\"パスワード\"\r\n                type={showPassword ? 'text' : 'password'}\r\n                value={password}\r\n                onChange={(e) => setPassword(e.target.value)}\r\n                placeholder=\"パスワードを入力（6文字以上）\"\r\n                required\r\n              />\r\n              <button\r\n                type=\"button\"\r\n                className=\"absolute right-3 top-8 text-gray-400 hover:text-gray-600\"\r\n                onClick={() => setShowPassword(!showPassword)}\r\n              >\r\n                {showPassword ? <EyeOff className=\"h-5 w-5\" /> : <Eye className=\"h-5 w-5\" />}\r\n              </button>\r\n            </div>\r\n\r\n            <div className=\"relative\">\r\n              <Input\r\n                label=\"パスワード確認\"\r\n                type={showConfirmPassword ? 'text' : 'password'}\r\n                value={confirmPassword}\r\n                onChange={(e) => setConfirmPassword(e.target.value)}\r\n                placeholder=\"パスワードを再入力\"\r\n                required\r\n              />\r\n              <button\r\n                type=\"button\"\r\n                className=\"absolute right-3 top-8 text-gray-400 hover:text-gray-600\"\r\n                onClick={() => setShowConfirmPassword(!showConfirmPassword)}\r\n              >\r\n                {showConfirmPassword ? <EyeOff className=\"h-5 w-5\" /> : <Eye className=\"h-5 w-5\" />}\r\n              </button>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"flex items-center\">\r\n            <input\r\n              id=\"terms\"\r\n              name=\"terms\"\r\n              type=\"checkbox\"\r\n              required\r\n              className=\"h-4 w-4 text-primary-600 focus:ring-primary-500 border-gray-300 rounded\"\r\n            />\r\n            <label htmlFor=\"terms\" className=\"ml-2 block text-sm text-gray-900\">\r\n              <Link to=\"#\" className=\"text-primary-600 hover:text-primary-500\">\r\n                利用規約\r\n              </Link>\r\n              と\r\n              <Link to=\"#\" className=\"text-primary-600 hover:text-primary-500\">\r\n                プライバシーポリシー\r\n              </Link>\r\n              に同意します\r\n            </label>\r\n          </div>\r\n\r\n          <div>\r\n            <Button\r\n              type=\"submit\"\r\n              className=\"w-full\"\r\n              disabled={isLoading}\r\n            >\r\n              {isLoading ? 'アカウント作成中...' : 'アカウントを作成'}\r\n            </Button>\r\n          </div>\r\n\r\n          <div className=\"text-center\">\r\n            <Link to=\"/\" className=\"text-sm text-gray-600 hover:text-gray-500\">\r\n              ホームに戻る\r\n            </Link>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default RegisterPage\r\n","import { Routes, Route } from 'react-router-dom'\r\nimport { AuthProvider } from '@/components/providers/MockAuthProvider'\r\nimport Layout from '@/components/Layout'\r\nimport HomePage from '@/pages/HomePage'\r\nimport EditorPage from '@/pages/EditorPage'\r\nimport DashboardPage from '@/pages/DashboardPage'\r\nimport LoginPage from '@/pages/LoginPage'\r\nimport RegisterPage from '@/pages/RegisterPage'\r\n\r\nfunction App() {\r\n  return (\r\n    <AuthProvider>\r\n      <div className=\"min-h-screen bg-gradient-to-br from-blue-50 to-indigo-100\">\r\n        <Routes>\r\n          {/* Public routes */}\r\n          <Route path=\"/\" element={<Layout />}>\r\n            <Route index element={<HomePage />} />\r\n            <Route path=\"login\" element={<LoginPage />} />\r\n            <Route path=\"register\" element={<RegisterPage />} />\r\n            <Route path=\"editor\" element={<EditorPage />} />\r\n            <Route path=\"dashboard\" element={<DashboardPage />} />\r\n          </Route>\r\n        </Routes>\r\n      </div>\r\n    </AuthProvider>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom/client'\r\nimport { BrowserRouter } from 'react-router-dom'\r\nimport App from './App.tsx'\r\nimport './app/globals.css'\r\n\r\nReactDOM.createRoot(document.getElementById('root')!).render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n)\r\n"],"names":["f","require$$0","k","l","m","n","p","q","c","a","g","b","d","e","h","reactJsxRuntime_production_min","jsxRuntimeModule","client","AuthContext","createContext","useAuth","context","useContext","AuthProvider","children","user","setUser","useState","loading","setLoading","useEffect","savedUser","value","email","_password","mockUser","displayName","jsx","Layout","Outlet","r","t","o","clsx","Button","variant","size","className","props","baseClasses","variantClasses","sizeClasses","HomePage","jsxs","BookOpen","Link","Sparkles","Users","Shield","Textarea","React","label","error","helperText","id","ref","inputId","Input","mockAISuggestions","mockScenarios","MockDataService","__publicField","userId","s","scenario","newScenario","updates","index","saved","parsed","mockDataService","ScenarioEditor","initialContent","onSave","content","setContent","title","setTitle","tags","setTags","newTag","setNewTag","isPublic","setIsPublic","aiSuggestions","setAiSuggestions","isGenerating","setIsGenerating","cursorPosition","setCursorPosition","scenarioId","setScenarioId","textareaRef","useRef","generateAICompletion","resolve","suggestions","handleTextChange","handleCursorPosition","insertSuggestion","suggestion","beforeCursor","afterCursor","newContent","newPosition","addTag","removeTag","tagToRemove","tag","handleSave","newId","copyToClipboard","exportContent","dataStr","dataBlob","url","link","Copy","Download","Save","Plus","word","EditorPage","searchParams","useSearchParams","setInitialContent","DashboardPage","signOut","navigate","useNavigate","scenarios","setScenarios","isLoadingScenarios","setIsLoadingScenarios","loadScenarios","userScenarios","handleSignOut","handleDeleteScenario","User","LogOut","Eye","Calendar","Edit","Trash2","LoginPage","setEmail","password","setPassword","showPassword","setShowPassword","isLoading","setIsLoading","setError","signIn","handleSubmit","EyeOff","RegisterPage","confirmPassword","setConfirmPassword","setDisplayName","showConfirmPassword","setShowConfirmPassword","signUp","App","Routes","Route","ReactDOM","BrowserRouter"],"mappings":"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","x_google_ignoreList":[0,1,2,5]}